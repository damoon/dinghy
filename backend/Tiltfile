
local_resource('backend go generate',
    cmd='go generate ./pkg',
    deps=['../notify/service.proto'],
    auto_init=False,
    trigger_mode=TRIGGER_MODE_MANUAL,
)

k8s_yaml('deployment/backend/kubernetes.yaml')
if os.environ.get('PROD', '') ==  '':
  docker_build(
    'backend-image',
    '.',
    dockerfile='deployment/backend/Dockerfile',
    target='build-env',
    build_args={"SOURCE_BRANCH":"development", "SOURCE_COMMIT":"development"},
    only=[ 'go.mod'
         , 'go.sum'
         , 'pkg'
         , 'cmd'
         , 'deployment/backend'
    ],
    ignore=['*/*_test.go'],
    live_update=[
      sync('pkg',    '/app/pkg'),
      sync('cmd',    '/app/cmd'),
      sync('go.mod', '/app/go.mod'),
      sync('go.sum', '/app/go.sum'),
      run('go install ./cmd/backend'),
    ],
  )
else:
  docker_build(
    'backend-image',
    '.',
    dockerfile='deployment/backend/Dockerfile',
    build_args={"SOURCE_BRANCH":"development", "SOURCE_COMMIT":"development"},
    only=[ 'go.mod'
         , 'go.sum'
         , 'pkg'
         , 'cmd'
         , 'deployment/backend'
    ],
    ignore=['*/*_test.go'],
  )

k8s_resource(
  'backend',
  port_forwards=['8080', '8090'],
  resource_deps=['setup-s3-bucket'],
)


k8s_yaml('deployment/integration-tests/tests.yaml')
docker_build(
  'integration-tests-image',
  '.',
  dockerfile='deployment/integration-tests/Dockerfile',
  only=['tests', 'deployment/integration-tests'],
)
k8s_resource(
  'backend-integration-tests',
  trigger_mode=TRIGGER_MODE_MANUAL,
  resource_deps=['backend'],
)


k8s_yaml('deployment/unit-tests/tests.yaml')
docker_build(
  'unit-tests-image',
  '.',
  dockerfile='deployment/unit-tests/Dockerfile',
  only=[ 'go.mod'
       , 'go.sum'
       , 'pkg'
       , 'cmd'
       , 'deployment/backend'
  ],
)
