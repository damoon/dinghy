apiVersion: v1
kind: Service
metadata:
  name: minio
spec:
  ports:
    - name: minio
      port: 9000
  selector:
    app: minio
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
spec:
  selector:
    matchLabels:
        app: minio
  strategy:
    type: Recreate
  replicas: 1
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
        - name: minio
          image: minio/minio:RELEASE.2020-05-16T01-33-21Z
          args:
            - server
            - /home/shared
          env:
            - name: MINIO_ACCESS_KEY
              value: minio
            - name: MINIO_SECRET_KEY
              value: minio123
#            - name: MINIO_NOTIFY_REDIS_ENABLE
#              value: "on"
#            - name: MINIO_NOTIFY_REDIS_ADDRESS
#              value: redis:6379
#            - name: MINIO_NOTIFY_REDIS_KEY
#              value: bucketevents
#            - name: MINIO_NOTIFY_REDIS_PASSWORD
#              value: redis123
#            - name: MINIO_NOTIFY_REDIS_QUEUE_DIR
#              value: /queue
            - name: MINIO_NOTIFY_WEBHOOK_ENABLE
              value: "on"
            - name: MINIO_NOTIFY_WEBHOOK_ENDPOINT
              value: http://backend:8080/?webhook
            - name: MINIO_NOTIFY_WEBHOOK_AUTH_TOKEN
              value: auth_token_value
            - name: MINIO_NOTIFY_WEBHOOK_QUEUE_DIR
              value: /queue
          ports:
            - name: http
              containerPort: 9000
          resources:
            limits:
              cpu: "100m"
              memory: "500Mi"
            requests:
              cpu: "100m"
              memory: "500Mi"
          readinessProbe:
            httpGet:
              path: /minio/health/live
              port: 9000
          lifecycle:
            preStop:
              exec:
                command:
                  - sh
                  - -c
                  - "sleep 10"
          volumeMounts:
            - name: data
              mountPath: /home/shared  
            - name: queue
              mountPath: /queue
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: minio
        - name: queue
          persistentVolumeClaim:
            claimName: minio-notification-queue
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: minio-notification-queue
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
